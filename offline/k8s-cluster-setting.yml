- hosts: localhost
  become: yes
  vars:
    packages_dir: $HOME/k8s-packages
  tasks:
   - name: install docker packages
     shell: "rpm -ivh *"
     args:
       chdir: "{{ packages_dir }}/docker-packages"

   - name: create kubelet.service.d directory
     file:
       path: /etc/systemd/system/kubelet.service.d/
       state: directory

   - name: copy kubelet.service
     copy:
       src: "{{ packages_dir }}/k8s-packages/kubelet.service"
       dest: /etc/systemd/system/kubelet.service
       remote_src: yes

   - name: copy 10-kubeadm.conf
     copy:
       src: "{{ packages_dir }}/k8s-packages/10-kubeadm.conf"
       dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
       remote_src: yes

   - name: install kubeadm, kubectl, kubelet
     shell: |
        echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
        echo "$(cat kubeadm.sha256)  kubeadm" | sha256sum --check
        echo "$(cat kubelet.sha256)  kubelet" | sha256sum --check
        install -o root -g root -m 0755 kubectl /usr/bin/kubectl
        install -o root -g root -m 0755 kubeadm /usr/bin/kubeadm
        install -o root -g root -m 0755 kubelet /usr/bin/kubelet
     args:
       chdir: "{{ packages_dir}}/k8s-packages"

   - name: add group docker
     group:
       name: "docker"

   - name: add remote user to "docker" group
     user:
       name: "ec2-user"
       group: "docker"
       append: yes

   - name: start Docker
     service:
       name: docker
       enabled: yes
       state: started

   - name: add daemon.json to get rid of kubelet issues
     copy:
       dest: "/etc/docker/daemon.json"
       content: |
         {
           "exec-opts": ["native.cgroupdriver=systemd"],
           "log-driver": "json-file",
           "log-opts": {
             "max-size": "100m"
           },
           "storage-driver": "overlay2"
         }cd

   - name: Docker daemon reload
     shell: |
        systemctl daemon-reload
        systemctl restart docker
        systemctl enable docker

#   - name: disable SELinux
#     command: setenforce 0

   - name: disable SELinux on reboot
     selinux:
       state: disabled

   - name: Remove swapfile from /etc/fstab
     mount:
       name: swap
       fstype: swap
       state: absent

   - name: Disable swap
     command: swapoff -a
     when: ansible_swaptotal_mb > 0

   - name: set k8s config
     copy:
       dest: "/etc/modules-load.d/k8s.conf"
       content: br_netfilter

   - name: set k8s config
     copy:
       dest: "/etc/sysctl.d/k8s.conf"
       content: |
         net.bridge.bridge-nf-call-ip6tables = 1
         net.bridge.bridge-nf-call-iptables = 1

   - name: sysctl --system
     shell: sysctl --system

   - name: start kubelet
     service:
       name: kubelet
       enabled: yes
       state: started
